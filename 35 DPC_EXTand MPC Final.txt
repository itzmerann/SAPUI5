MPC CODE

  method DEFINE.
    
    super->define( ).
    
    me->model->get_entity_type( 'ProductImg' )->get_property( 'PRODUCT_PIC_URL' )->set_as_content_source( ).
    me->model->get_entity_type( 'ProductImg' )->get_property( 'MIME_TYPE' )->set_as_content_type( ).
    
  endmethod.


DPC CODE

class ZCL_ZMAR_2021_DPC_EXT definition
  public
  inheriting from ZCL_ZMAR_2021_DPC
  create public .

public section.

  methods /IWBEP/IF_MGW_APPL_SRV_RUNTIME~EXECUTE_ACTION
    redefinition .
  methods /IWBEP/IF_MGW_APPL_SRV_RUNTIME~GET_STREAM
    redefinition .
protected section.

  methods ORDERITEMSET_GET_ENTITYSET
    redefinition .
  methods PRODUCTIMGSET_GET_ENTITY
    redefinition .
  methods PRODUCTSET_CREATE_ENTITY
    redefinition .
  methods PRODUCTSET_GET_ENTITY
    redefinition .
  methods PRODUCTSET_GET_ENTITYSET
    redefinition .
  methods SUPPLIERSET_GET_ENTITY
    redefinition .
  methods SUPPLIERSET_GET_ENTITYSET
    redefinition .
private section.
ENDCLASS.



CLASS ZCL_ZMAR_2021_DPC_EXT IMPLEMENTATION.


* <SIGNATURE>---------------------------------------------------------------------------------------+
* | Instance Public Method ZCL_ZMAR_2021_DPC_EXT->/IWBEP/IF_MGW_APPL_SRV_RUNTIME~EXECUTE_ACTION
* +-------------------------------------------------------------------------------------------------+
* | [--->] IV_ACTION_NAME                 TYPE        STRING(optional)
* | [--->] IT_PARAMETER                   TYPE        /IWBEP/T_MGW_NAME_VALUE_PAIR(optional)
* | [--->] IO_TECH_REQUEST_CONTEXT        TYPE REF TO /IWBEP/IF_MGW_REQ_FUNC_IMPORT(optional)
* | [<---] ER_DATA                        TYPE REF TO DATA
* | [!CX!] /IWBEP/CX_MGW_BUSI_EXCEPTION
* | [!CX!] /IWBEP/CX_MGW_TECH_EXCEPTION
* +--------------------------------------------------------------------------------------</SIGNATURE>
  method /iwbep/if_mgw_appl_srv_runtime~execute_action.
    case iv_action_name.
      when 'GetMostExpensiveProduct'.

        data: lv_product_id type bapi_epm_product_id,
              ls_header     type bapi_epm_product_header,
              ls_entity     type zcl_zmar_2021_mpc=>ts_product.

        read TABLE IT_PARAMETER INTO data(ls_param) INDEX 1.

        select single product_id from snwd_pd into @lv_product_id
               where price = ( select max( price ) from snwd_pd where category = @ls_param-value ).

        call function 'BAPI_EPM_PRODUCT_GET_DETAIL'
          exporting
            product_id = lv_product_id                 " EPM: Product header data of BOR object SEPM002
          importing
            headerdata = ls_header                 " EPM: Product header data of BOR object SEPM002
*          tables
*           conversion_factors =                  " EPM: Product conversion factor data of BOR object SEPM002
*           return     =                  " Return Parameter
          .

        move-corresponding ls_header to ls_entity.

        me->copy_data_to_ref(
          exporting
            is_data = ls_entity
          changing
            cr_data = er_data
        ).


      when others.
    endcase.
  endmethod.


* <SIGNATURE>---------------------------------------------------------------------------------------+
* | Instance Public Method ZCL_ZMAR_2021_DPC_EXT->/IWBEP/IF_MGW_APPL_SRV_RUNTIME~GET_STREAM
* +-------------------------------------------------------------------------------------------------+
* | [--->] IV_ENTITY_NAME                 TYPE        STRING(optional)
* | [--->] IV_ENTITY_SET_NAME             TYPE        STRING(optional)
* | [--->] IV_SOURCE_NAME                 TYPE        STRING(optional)
* | [--->] IT_KEY_TAB                     TYPE        /IWBEP/T_MGW_NAME_VALUE_PAIR(optional)
* | [--->] IT_NAVIGATION_PATH             TYPE        /IWBEP/T_MGW_NAVIGATION_PATH(optional)
* | [--->] IO_TECH_REQUEST_CONTEXT        TYPE REF TO /IWBEP/IF_MGW_REQ_ENTITY(optional)
* | [<---] ER_STREAM                      TYPE REF TO DATA
* | [<---] ES_RESPONSE_CONTEXT            TYPE        /IWBEP/IF_MGW_APPL_SRV_RUNTIME=>TY_S_MGW_RESPONSE_ENTITY_CNTXT
* | [!CX!] /IWBEP/CX_MGW_BUSI_EXCEPTION
* | [!CX!] /IWBEP/CX_MGW_TECH_EXCEPTION
* +--------------------------------------------------------------------------------------</SIGNATURE>
  method /iwbep/if_mgw_appl_srv_runtime~get_stream.

    data: lv_prod_id type bapi_epm_product_id,
          ls_header  type bapi_epm_product_header,
          ls_media   type ty_s_media_resource.

    read table it_key_tab into data(ls_key) index 1.

    lv_prod_id = ls_key-value.

    call function 'BAPI_EPM_PRODUCT_GET_DETAIL'
      exporting
        product_id = lv_prod_id                 " EPM: Product header data of BOR object SEPM002
      importing
        headerdata = ls_header                 " EPM: Product header data of BOR object SEPM002
*      tables
*       conversion_factors =                  " EPM: Product conversion factor data of BOR object SEPM002
*       return     =                  " Return Parameter
      .

    cl_mime_repository_api=>get_api( )->get(
      exporting
        i_url                  = ls_header-product_pic_url                 " Object URL
*        i_check_authority      = 'X'              " X Check Authorization, '' No Authorization Check
      importing
*        e_is_folder            =                  " X - Object is folder, '' - Otherwise file
        e_content              = ls_media-value                 " Object Contents
*        e_content_last_changed =                  " Change Time (UTC) of Content
        e_mime_type            = ls_media-mime_type                 " MIME Type
*        e_loio                 =                  " Technical Object Key Incl. MIME-GUID
*      changing
*        c_language             =                  " Object Language
*      exceptions
*        parameter_missing      = 1                " Parameter missing or is initial
*        error_occured          = 2                " Unspecified Error Occurred
*        not_found              = 3                " Object not found
*        permission_failure     = 4                " Missing Authorization
*        others                 = 5
    ).
    if sy-subrc <> 0.
*     message id sy-msgid type sy-msgty number sy-msgno
*       with sy-msgv1 sy-msgv2 sy-msgv3 sy-msgv4.
    endif.

    me->copy_data_to_ref(
      exporting
        is_data = ls_media
      changing
        cr_data = er_stream
    ).



  endmethod.


* <SIGNATURE>---------------------------------------------------------------------------------------+
* | Instance Protected Method ZCL_ZMAR_2021_DPC_EXT->ORDERITEMSET_GET_ENTITYSET
* +-------------------------------------------------------------------------------------------------+
* | [--->] IV_ENTITY_NAME                 TYPE        STRING
* | [--->] IV_ENTITY_SET_NAME             TYPE        STRING
* | [--->] IV_SOURCE_NAME                 TYPE        STRING
* | [--->] IT_FILTER_SELECT_OPTIONS       TYPE        /IWBEP/T_MGW_SELECT_OPTION
* | [--->] IS_PAGING                      TYPE        /IWBEP/S_MGW_PAGING
* | [--->] IT_KEY_TAB                     TYPE        /IWBEP/T_MGW_NAME_VALUE_PAIR
* | [--->] IT_NAVIGATION_PATH             TYPE        /IWBEP/T_MGW_NAVIGATION_PATH
* | [--->] IT_ORDER                       TYPE        /IWBEP/T_MGW_SORTING_ORDER
* | [--->] IV_FILTER_STRING               TYPE        STRING
* | [--->] IV_SEARCH_STRING               TYPE        STRING
* | [--->] IO_TECH_REQUEST_CONTEXT        TYPE REF TO /IWBEP/IF_MGW_REQ_ENTITYSET(optional)
* | [<---] ET_ENTITYSET                   TYPE        ZCL_ZMAR_2021_MPC=>TT_ORDERITEM
* | [<---] ES_RESPONSE_CONTEXT            TYPE        /IWBEP/IF_MGW_APPL_SRV_RUNTIME=>TY_S_MGW_RESPONSE_CONTEXT
* | [!CX!] /IWBEP/CX_MGW_BUSI_EXCEPTION
* | [!CX!] /IWBEP/CX_MGW_TECH_EXCEPTION
* +--------------------------------------------------------------------------------------</SIGNATURE>
  method ORDERITEMSET_GET_ENTITYSET.

    data: lv_prod_id type bapi_epm_product_id,
          lt_order   type zcl_zmar_2021_mpc=>tt_orderitem,
          ls_order   like line of lt_order.

    read TABLE it_key_tab INTO data(ls_key) index 1.
    lv_prod_id = ls_key-value.

    select item~gross_amount,item~net_amount, item~tax_amount,
      item~currency_code, item~so_item_pos,
      so~so_id, so~overall_status
        from snwd_so_i as item inner JOIN snwd_so as so
      on item~parent_key = so~node_key
      into CORRESPONDING FIELDS OF table @et_entityset
      where
      item~product_guid in
      ( select node_key from snwd_pd where product_id = @lv_prod_id ).


  endmethod.


* <SIGNATURE>---------------------------------------------------------------------------------------+
* | Instance Protected Method ZCL_ZMAR_2021_DPC_EXT->PRODUCTIMGSET_GET_ENTITY
* +-------------------------------------------------------------------------------------------------+
* | [--->] IV_ENTITY_NAME                 TYPE        STRING
* | [--->] IV_ENTITY_SET_NAME             TYPE        STRING
* | [--->] IV_SOURCE_NAME                 TYPE        STRING
* | [--->] IT_KEY_TAB                     TYPE        /IWBEP/T_MGW_NAME_VALUE_PAIR
* | [--->] IO_REQUEST_OBJECT              TYPE REF TO /IWBEP/IF_MGW_REQ_ENTITY(optional)
* | [--->] IO_TECH_REQUEST_CONTEXT        TYPE REF TO /IWBEP/IF_MGW_REQ_ENTITY(optional)
* | [--->] IT_NAVIGATION_PATH             TYPE        /IWBEP/T_MGW_NAVIGATION_PATH
* | [<---] ER_ENTITY                      TYPE        ZCL_ZMAR_2021_MPC=>TS_PRODUCTIMG
* | [<---] ES_RESPONSE_CONTEXT            TYPE        /IWBEP/IF_MGW_APPL_SRV_RUNTIME=>TY_S_MGW_RESPONSE_ENTITY_CNTXT
* | [!CX!] /IWBEP/CX_MGW_BUSI_EXCEPTION
* | [!CX!] /IWBEP/CX_MGW_TECH_EXCEPTION
* +--------------------------------------------------------------------------------------</SIGNATURE>
  method PRODUCTIMGSET_GET_ENTITY.

    data : ls_key     like line of it_key_tab,
           lv_prod_id type         bapi_epm_product_id,
           ls_header  type         bapi_epm_product_header,
           lt_return  type table of bapiret2.

    read table it_key_tab into ls_key with key name = 'PRODUCT_ID'.

    lv_prod_id = ls_key-value.

    if lv_prod_id is INITIAL.
      raise exception type /iwbep/cx_mgw_busi_exception
        exporting
          textid = value #( msgid = 'ZANUBHAV' msgno = 002 ).
    endif.



    call FUNCTION 'BAPI_EPM_PRODUCT_GET_DETAIL'
      exporting
        product_id         = lv_prod_id                 " EPM: Product header data of BOR object SEPM002
      importing
        headerdata         = ls_header                 " EPM: Product header data of BOR object SEPM002
      tables
*        conversion_factors =                  " EPM: Product conversion factor data of BOR object SEPM002
        return             = lt_return                 " Return Parameter
      .

    IF lt_return is NOT INITIAL.

      me->mo_context->get_message_container( )->add_messages_from_bapi(
        exporting
          it_bapi_messages          = lt_return
      ).

      RAISE EXCEPTION TYPE /iwbep/cx_mgw_busi_exception
        exporting
           message_container      = me->mo_context->get_message_container( )
      .

    ENDIF.

    MOVE-CORRESPONDING ls_header to er_entity.

*CALL METHOD SUPER->PRODUCTIMGSET_GET_ENTITY
*  EXPORTING
*    IV_ENTITY_NAME          =
*    IV_ENTITY_SET_NAME      =
*    IV_SOURCE_NAME          =
*    IT_KEY_TAB              =
**    io_request_object       =
**    io_tech_request_context =
*    IT_NAVIGATION_PATH      =
**  importing
**    er_entity               =
**    es_response_context     =
*    .
**  catch /iwbep/cx_mgw_busi_exception.
**  catch /iwbep/cx_mgw_tech_exception.
**endtry.
  endmethod.


* <SIGNATURE>---------------------------------------------------------------------------------------+
* | Instance Protected Method ZCL_ZMAR_2021_DPC_EXT->PRODUCTSET_CREATE_ENTITY
* +-------------------------------------------------------------------------------------------------+
* | [--->] IV_ENTITY_NAME                 TYPE        STRING
* | [--->] IV_ENTITY_SET_NAME             TYPE        STRING
* | [--->] IV_SOURCE_NAME                 TYPE        STRING
* | [--->] IT_KEY_TAB                     TYPE        /IWBEP/T_MGW_NAME_VALUE_PAIR
* | [--->] IO_TECH_REQUEST_CONTEXT        TYPE REF TO /IWBEP/IF_MGW_REQ_ENTITY_C(optional)
* | [--->] IT_NAVIGATION_PATH             TYPE        /IWBEP/T_MGW_NAVIGATION_PATH
* | [--->] IO_DATA_PROVIDER               TYPE REF TO /IWBEP/IF_MGW_ENTRY_PROVIDER(optional)
* | [<---] ER_ENTITY                      TYPE        ZCL_ZMAR_2021_MPC=>TS_PRODUCT
* | [!CX!] /IWBEP/CX_MGW_BUSI_EXCEPTION
* | [!CX!] /IWBEP/CX_MGW_TECH_EXCEPTION
* +--------------------------------------------------------------------------------------</SIGNATURE>
  method PRODUCTSET_CREATE_ENTITY.

    data: ls_entity type zcl_zmar_2021_mpc=>ts_product,
          ls_header type bapi_epm_product_header,
          LT_return type TABLE OF bapiret2.

    IO_DATA_PROVIDER->read_entry_data(
      importing
        es_data = ls_entity
    ).

    MOVE-CORRESPONDING ls_entity to ls_header.

    call FUNCTION 'BAPI_EPM_PRODUCT_CREATE'
      exporting
        headerdata         = ls_header                 " EPM: Product header data of BOR object SEPM002
*        persist_to_db      = abap_true        " Flag: Save data to DB (yes/no)
      tables
*        conversion_factors =                  " EPM: Product conversion factor data of BOR object SEPM002
         return             = LT_return                 " Return Parameter
      .

    IF LT_return is NOT INITIAL.

      me->mo_context->get_message_container( )->add_messages_from_bapi(
        exporting
          it_bapi_messages          = LT_return
      ).

      RAISE EXCEPTION TYPE /iwbep/cx_mgw_busi_exception
        exporting
           message_container      = me->mo_context->get_message_container( )
      .
    ENDIF.

    er_entity = ls_entity.

  endmethod.


* <SIGNATURE>---------------------------------------------------------------------------------------+
* | Instance Protected Method ZCL_ZMAR_2021_DPC_EXT->PRODUCTSET_GET_ENTITY
* +-------------------------------------------------------------------------------------------------+
* | [--->] IV_ENTITY_NAME                 TYPE        STRING
* | [--->] IV_ENTITY_SET_NAME             TYPE        STRING
* | [--->] IV_SOURCE_NAME                 TYPE        STRING
* | [--->] IT_KEY_TAB                     TYPE        /IWBEP/T_MGW_NAME_VALUE_PAIR
* | [--->] IO_REQUEST_OBJECT              TYPE REF TO /IWBEP/IF_MGW_REQ_ENTITY(optional)
* | [--->] IO_TECH_REQUEST_CONTEXT        TYPE REF TO /IWBEP/IF_MGW_REQ_ENTITY(optional)
* | [--->] IT_NAVIGATION_PATH             TYPE        /IWBEP/T_MGW_NAVIGATION_PATH
* | [<---] ER_ENTITY                      TYPE        ZCL_ZMAR_2021_MPC=>TS_PRODUCT
* | [<---] ES_RESPONSE_CONTEXT            TYPE        /IWBEP/IF_MGW_APPL_SRV_RUNTIME=>TY_S_MGW_RESPONSE_ENTITY_CNTXT
* | [!CX!] /IWBEP/CX_MGW_BUSI_EXCEPTION
* | [!CX!] /IWBEP/CX_MGW_TECH_EXCEPTION
* +--------------------------------------------------------------------------------------</SIGNATURE>
  method productset_get_entity.

    data : ls_key     like line of it_key_tab,
           lv_prod_id type         bapi_epm_product_id,
           ls_header  type         bapi_epm_product_header,
           lt_return  type table of bapiret2.

    read table it_key_tab into ls_key with key name = 'PRODUCT_ID'.

    lv_prod_id = ls_key-value.

    if lv_prod_id is INITIAL.
      raise exception type /iwbep/cx_mgw_busi_exception
        exporting
          textid = value #( msgid = 'ZANUBHAV' msgno = 002 ).
    endif.



    call FUNCTION 'BAPI_EPM_PRODUCT_GET_DETAIL'
      exporting
        product_id         = lv_prod_id                 " EPM: Product header data of BOR object SEPM002
      importing
        headerdata         = ls_header                 " EPM: Product header data of BOR object SEPM002
      tables
*        conversion_factors =                  " EPM: Product conversion factor data of BOR object SEPM002
        return             = lt_return                 " Return Parameter
      .

    IF lt_return is NOT INITIAL.

      me->mo_context->get_message_container( )->add_messages_from_bapi(
        exporting
          it_bapi_messages          = lt_return
      ).

      RAISE EXCEPTION TYPE /iwbep/cx_mgw_busi_exception
        exporting
           message_container      = me->mo_context->get_message_container( )
      .

    ENDIF.

    MOVE-CORRESPONDING ls_header to er_entity.

  endmethod.


* <SIGNATURE>---------------------------------------------------------------------------------------+
* | Instance Protected Method ZCL_ZMAR_2021_DPC_EXT->PRODUCTSET_GET_ENTITYSET
* +-------------------------------------------------------------------------------------------------+
* | [--->] IV_ENTITY_NAME                 TYPE        STRING
* | [--->] IV_ENTITY_SET_NAME             TYPE        STRING
* | [--->] IV_SOURCE_NAME                 TYPE        STRING
* | [--->] IT_FILTER_SELECT_OPTIONS       TYPE        /IWBEP/T_MGW_SELECT_OPTION
* | [--->] IS_PAGING                      TYPE        /IWBEP/S_MGW_PAGING
* | [--->] IT_KEY_TAB                     TYPE        /IWBEP/T_MGW_NAME_VALUE_PAIR
* | [--->] IT_NAVIGATION_PATH             TYPE        /IWBEP/T_MGW_NAVIGATION_PATH
* | [--->] IT_ORDER                       TYPE        /IWBEP/T_MGW_SORTING_ORDER
* | [--->] IV_FILTER_STRING               TYPE        STRING
* | [--->] IV_SEARCH_STRING               TYPE        STRING
* | [--->] IO_TECH_REQUEST_CONTEXT        TYPE REF TO /IWBEP/IF_MGW_REQ_ENTITYSET(optional)
* | [<---] ET_ENTITYSET                   TYPE        ZCL_ZMAR_2021_MPC=>TT_PRODUCT
* | [<---] ES_RESPONSE_CONTEXT            TYPE        /IWBEP/IF_MGW_APPL_SRV_RUNTIME=>TY_S_MGW_RESPONSE_CONTEXT
* | [!CX!] /IWBEP/CX_MGW_BUSI_EXCEPTION
* | [!CX!] /IWBEP/CX_MGW_TECH_EXCEPTION
* +--------------------------------------------------------------------------------------</SIGNATURE>
  method productset_get_entityset.

    data: lt_products type table of bapi_epm_product_header,
          lv_top      type i,
          lv_skip     type i,
          lv_total    type i,
          ls_max_rows type bapi_epm_max_rows,
          ls_entity   type zcl_zmar_2021_mpc=>ts_product,
          lt_sel_cat  type TABLE OF BAPI_EPM_PRODUCT_CATEG_RANGE.

    lv_top =  is_paging-top.
    lv_skip =  is_paging-skip.
    lv_total = lv_top + lv_skip.
    ls_max_rows-bapimaxrow = lv_total.

    read table it_filter_select_options INTO data(ls_filter) with key property = 'CATEGORY'.

    IF sy-subrc = 0.
      LOOP AT ls_filter-select_options INTO data(ls_sel_opt).

        append VALUE #( sign = ls_sel_opt-sign option = ls_sel_opt-option
                        low = ls_sel_opt-low  high = ls_sel_opt-high ) to lt_sel_cat.

      ENDLOOP.
    else.
      DESCRIBE TABLE it_filter_select_options.
      IF sy-tfill > 0.
        raise EXCEPTION type /iwbep/cx_mgw_busi_exception
          exporting
             message_unlimited      = 'Dude, Looks like this filter is not yet supported'
        .
      ENDIF.
    ENDIF.


    call function 'BAPI_EPM_PRODUCT_GET_LIST'
      exporting
        max_rows   = ls_max_rows                 " Maximum number of lines of hits
      tables
        headerdata = lt_products                 " EPM: Product header data of BOR object SEPM002
*       selparamproductid     =                  " EPM: BAPI range table for product ids
*       selparamsuppliernames =                  " EPM: BAPI range table for company names
        selparamcategories    = lt_sel_cat                 " EPM: Range table for product categories
*       return     =                  " Return Parameter
      .

    if lv_total > 0.
      loop at lt_products into data(ls_product) from lv_skip + 1 to lv_total.
        move-corresponding ls_product to ls_entity.
        append ls_entity to et_entityset.
      endloop.
    else.
      move-corresponding lt_products to et_entityset.
    endif.



  endmethod.


* <SIGNATURE>---------------------------------------------------------------------------------------+
* | Instance Protected Method ZCL_ZMAR_2021_DPC_EXT->SUPPLIERSET_GET_ENTITY
* +-------------------------------------------------------------------------------------------------+
* | [--->] IV_ENTITY_NAME                 TYPE        STRING
* | [--->] IV_ENTITY_SET_NAME             TYPE        STRING
* | [--->] IV_SOURCE_NAME                 TYPE        STRING
* | [--->] IT_KEY_TAB                     TYPE        /IWBEP/T_MGW_NAME_VALUE_PAIR
* | [--->] IO_REQUEST_OBJECT              TYPE REF TO /IWBEP/IF_MGW_REQ_ENTITY(optional)
* | [--->] IO_TECH_REQUEST_CONTEXT        TYPE REF TO /IWBEP/IF_MGW_REQ_ENTITY(optional)
* | [--->] IT_NAVIGATION_PATH             TYPE        /IWBEP/T_MGW_NAVIGATION_PATH
* | [<---] ER_ENTITY                      TYPE        ZCL_ZMAR_2021_MPC=>TS_SUPPLIER
* | [<---] ES_RESPONSE_CONTEXT            TYPE        /IWBEP/IF_MGW_APPL_SRV_RUNTIME=>TY_S_MGW_RESPONSE_ENTITY_CNTXT
* | [!CX!] /IWBEP/CX_MGW_BUSI_EXCEPTION
* | [!CX!] /IWBEP/CX_MGW_TECH_EXCEPTION
* +--------------------------------------------------------------------------------------</SIGNATURE>
  method SUPPLIERSET_GET_ENTITY.

    data : ls_key     like line of it_key_tab,
           lv_bp_id   type         bapi_epm_bp_id,
           lv_prod_id type         bapi_epm_product_id,
           ls_header  type         bapi_epm_bp_header,
           ls_prod_header type     bapi_epm_product_header,
           lt_return  type table of bapiret2.

    read table it_key_tab into ls_key with key name = 'BP_ID'.

    "Handle the case when due to association we get product_id
    IF sy-subrc <> 0 .
      read table it_key_tab into ls_key with key name = 'PRODUCT_ID'.
      lv_prod_id = ls_key-value.

      call FUNCTION 'BAPI_EPM_PRODUCT_GET_DETAIL'
        exporting
          product_id         = lv_prod_id                  " EPM: Product header data of BOR object SEPM002
        importing
          headerdata         = ls_prod_header                 " EPM: Product header data of BOR object SEPM002
*        tables
*          conversion_factors =                  " EPM: Product conversion factor data of BOR object SEPM002
*          return             =                  " Return Parameter
        .

      lv_bp_id = ls_prod_header-supplier_id.
    else.
      lv_bp_id = ls_key-value.
    ENDIF.



    if lv_bp_id is INITIAL.
      raise exception type /iwbep/cx_mgw_busi_exception
        exporting
          textid = value #( msgid = 'ZANUBHAV' msgno = 002 ).
    endif.



    call FUNCTION 'BAPI_EPM_BP_GET_DETAIL'
      exporting
        bp_id       = lv_bp_id                 " EPM: Business Partner ID to be used in BAPIs
      importing
        headerdata  = ls_header                 " EPM: Business Partner header data ( BOR SEPM004 )
      tables
*        contactdata =                  " EPM: Business Partner contact data ( BOR SEPM004 )
        return      = lt_return                 " Return Parameter
      .

    IF lt_return is NOT INITIAL.

      me->mo_context->get_message_container( )->add_messages_from_bapi(
        exporting
          it_bapi_messages          = lt_return
      ).

      RAISE EXCEPTION TYPE /iwbep/cx_mgw_busi_exception
        exporting
           message_container      = me->mo_context->get_message_container( )
      .

    ENDIF.

    MOVE-CORRESPONDING ls_header to er_entity.
  endmethod.


* <SIGNATURE>---------------------------------------------------------------------------------------+
* | Instance Protected Method ZCL_ZMAR_2021_DPC_EXT->SUPPLIERSET_GET_ENTITYSET
* +-------------------------------------------------------------------------------------------------+
* | [--->] IV_ENTITY_NAME                 TYPE        STRING
* | [--->] IV_ENTITY_SET_NAME             TYPE        STRING
* | [--->] IV_SOURCE_NAME                 TYPE        STRING
* | [--->] IT_FILTER_SELECT_OPTIONS       TYPE        /IWBEP/T_MGW_SELECT_OPTION
* | [--->] IS_PAGING                      TYPE        /IWBEP/S_MGW_PAGING
* | [--->] IT_KEY_TAB                     TYPE        /IWBEP/T_MGW_NAME_VALUE_PAIR
* | [--->] IT_NAVIGATION_PATH             TYPE        /IWBEP/T_MGW_NAVIGATION_PATH
* | [--->] IT_ORDER                       TYPE        /IWBEP/T_MGW_SORTING_ORDER
* | [--->] IV_FILTER_STRING               TYPE        STRING
* | [--->] IV_SEARCH_STRING               TYPE        STRING
* | [--->] IO_TECH_REQUEST_CONTEXT        TYPE REF TO /IWBEP/IF_MGW_REQ_ENTITYSET(optional)
* | [<---] ET_ENTITYSET                   TYPE        ZCL_ZMAR_2021_MPC=>TT_SUPPLIER
* | [<---] ES_RESPONSE_CONTEXT            TYPE        /IWBEP/IF_MGW_APPL_SRV_RUNTIME=>TY_S_MGW_RESPONSE_CONTEXT
* | [!CX!] /IWBEP/CX_MGW_BUSI_EXCEPTION
* | [!CX!] /IWBEP/CX_MGW_TECH_EXCEPTION
* +--------------------------------------------------------------------------------------</SIGNATURE>
  method SUPPLIERSET_GET_ENTITYSET.

    data: lt_bp type table of bapi_epm_bp_header,
          lv_top      type i,
          lv_skip     type i,
          lv_total    type i,
          ls_max_rows type bapi_epm_max_rows,
          lt_sel_company  type TABLE OF BAPI_EPM_COMPANY_NAME_RANGE,
          ls_entity   type zcl_zmar_2021_mpc=>ts_supplier.

    lv_top =  is_paging-top.
    lv_skip =  is_paging-skip.
    lv_total = lv_top + lv_skip.
    ls_max_rows-bapimaxrow = lv_total.

    read table it_filter_select_options INTO data(ls_filter) with key property = 'COMPANY_NAME'.

    IF sy-subrc = 0.
      LOOP AT ls_filter-select_options INTO data(ls_sel_opt).

        append VALUE #( sign = ls_sel_opt-sign option = ls_sel_opt-option
                        low = ls_sel_opt-low  high = ls_sel_opt-high ) to lt_sel_company.

      ENDLOOP.
    else.
      DESCRIBE TABLE it_filter_select_options.
      IF sy-tfill > 0.
        raise EXCEPTION type /iwbep/cx_mgw_busi_exception
          exporting
             message_unlimited      = 'Dude, Looks like this filter is not yet supported'
        .
      ENDIF.
    ENDIF.


    call function 'BAPI_EPM_BP_GET_LIST'
      exporting
        max_rows            = ls_max_rows                 " EPM: Max row specifictation
      tables
*        selparambpid        =                  " EPM: Range for Business Partner IDs
         selparamcompanyname =  lt_sel_company                " EPM: Range for Company name
         bpheaderdata        =  lt_bp                " EPM: Business Partner header data ( BOR SEPM004 )
*        bpcontactdata       =                  " EPM: Business Partner contact data ( BOR SEPM004 )
*        return              =                  " Return Parameter
      .

    if lv_total > 0.
      loop at lt_bp into data(ls_bp) from lv_skip + 1 to lv_total.
        move-corresponding ls_bp to ls_entity.
        append ls_entity to et_entityset.
      endloop.
    else.
      move-corresponding lt_bp to et_entityset.
    endif.
  endmethod.
ENDCLASS.